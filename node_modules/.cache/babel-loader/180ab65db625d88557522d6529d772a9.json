{"ast":null,"code":"var _jsxFileName = \"/Users/maximpiessen/Documents/credix/generate-keypair/src/components/KeyGenerator/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { FC, useState } from 'react';\nimport { Button } from \"@material-ui/core\";\nimport \"./style.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst KeyGenerator = () => {\n  _s();\n\n  const [goalWord, setGoalWord] = useState(\"ab\");\n  const [publicKey, setPublicKey] = useState(\"click on 'get key'\");\n  const [privateKey, setPrivateKey] = useState(\"\");\n  const [buttonDisabled, setButtonDisabled] = useState(false);\n  const [caseSensitive, setCaseSensitive] = useState(false);\n  const [timeEstimate, setTimeEstimate] = useState(0);\n\n  const handleChange = e => {\n    setGoalWord(e.target.value);\n  };\n\n  const handleCaseSensitiveChange = e => {\n    setCaseSensitive(e.target.checked);\n  };\n\n  useEffect(() => {\n    calculateTimeEstimate();\n  }, [goalWord, caseSensitive]);\n  calculateTimeEstimate();\n\n  function msToTime(duration) {\n    var milliseconds = Math.floor(duration % 1000 / 100),\n        seconds = Math.floor(duration / 1000 % 60),\n        minutes = Math.floor(duration / (1000 * 60) % 60),\n        hours = Math.floor(duration / (1000 * 60 * 60) % 24);\n    hours = hours < 10 ? \"0\" + hours : hours;\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\n    seconds = seconds < 10 ? \"0\" + seconds : seconds;\n    return hours + \":\" + minutes + \":\" + seconds + \".\" + milliseconds;\n  }\n\n  const calculateTimeEstimate = () => {\n    const wordLength = goalWord.length;\n    const numberOfNumbers = goalWord.replace(/[^0-9]/g, \"\").length;\n    const numberOfLetters = wordLength - numberOfNumbers;\n    const timeOneItaration = 2.6; //miliseconds\n\n    if (caseSensitive) {\n      setTimeEstimate((1 / 62) ** wordLength * timeOneItaration);\n    } else {\n      setTimeEstimate((2 / 62) ** numberOfLetters * (1 / 62) ** numberOfNumbers * timeOneItaration);\n    }\n  };\n\n  const handleSubmit = () => {\n    calculateTimeEstimate();\n    setPublicKey(`calculating... maximum time (rough estimate): ${msToTime(timeEstimate)}`);\n    setButtonDisabled(true);\n    var worker = new Worker(\"/createKey.js\");\n    worker.addEventListener('message', function (e) {\n      setPublicKey(e.data.publicKey);\n      setPrivateKey(e.data.privateKey);\n      setButtonDisabled(false);\n    }, false);\n    worker.postMessage({\n      \"goalWord\": goalWord,\n      \"caseSensitive\": caseSensitive\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"airdrop-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Generate a keypair for which the public key starts with letters of your choice \\uD83C\\uDF89\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"airdrop-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"red\",\n        children: \"All code runs in your browser; no-one, except for you has access to the generated keypair. Feel free to fork on Github and run locally.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Goal word\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Enter the word your public key should start with (the longer the word, the longer the wait).\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"goalWord\",\n        type: \"text\",\n        value: goalWord,\n        onChange: handleChange,\n        className: \"airdrop-pk-input stake-input borrower-pk credix-button MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary balance-button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Case sensitive:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"caseSensitive\",\n          type: \"checkbox\",\n          checked: caseSensitive,\n          onChange: handleCaseSensitiveChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        className: \"stake-submit MuiButton-containedPrimary balance-button credix-button sol-airdrop\",\n        onClick: handleSubmit,\n        disabled: buttonDisabled,\n        children: \"GET KEY\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Public Key:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: publicKey\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"download-keypair\",\n        href: `data:text/json;charset=utf-8,${encodeURIComponent(JSON.stringify(privateKey))}`,\n        download: \"id.json\",\n        disabled: buttonDisabled,\n        children: `Download keypair`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(KeyGenerator, \"8BJ70nWAom0GWsKQuW53qJohKuo=\");\n\n_c = KeyGenerator;\nexport default KeyGenerator;\n\nvar _c;\n\n$RefreshReg$(_c, \"KeyGenerator\");","map":{"version":3,"sources":["/Users/maximpiessen/Documents/credix/generate-keypair/src/components/KeyGenerator/index.js"],"names":["React","FC","useState","Button","KeyGenerator","goalWord","setGoalWord","publicKey","setPublicKey","privateKey","setPrivateKey","buttonDisabled","setButtonDisabled","caseSensitive","setCaseSensitive","timeEstimate","setTimeEstimate","handleChange","e","target","value","handleCaseSensitiveChange","checked","useEffect","calculateTimeEstimate","msToTime","duration","milliseconds","Math","floor","seconds","minutes","hours","wordLength","length","numberOfNumbers","replace","numberOfLetters","timeOneItaration","handleSubmit","worker","Worker","addEventListener","data","postMessage","encodeURIComponent","JSON","stringify"],"mappings":"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","sourcesContent":["import React, {FC, useState} from 'react';\nimport {Button} from \"@material-ui/core\";\n\n\nimport \"./style.scss\";\n\nconst KeyGenerator: FC = () => {\n  const [goalWord, setGoalWord] = useState(\"ab\");\n  const [publicKey, setPublicKey] = useState(\"click on 'get key'\");\n  const [privateKey, setPrivateKey] = useState(\"\");\n  const [buttonDisabled, setButtonDisabled] = useState(false); \n  const [caseSensitive, setCaseSensitive] = useState(false); \n  const [timeEstimate, setTimeEstimate] = useState(0); \n\n  const handleChange = (e) => {\n    setGoalWord(e.target.value); \n  };\n\n  const handleCaseSensitiveChange = (e) => {\n    setCaseSensitive(e.target.checked); \n  }\n\n  useEffect(() => {\n    calculateTimeEstimate()\n  }, [goalWord, caseSensitive]);\n  calculateTimeEstimate();\n\n  function msToTime(duration) {\n    var milliseconds = Math.floor((duration % 1000) / 100),\n      seconds = Math.floor((duration / 1000) % 60),\n      minutes = Math.floor((duration / (1000 * 60)) % 60),\n      hours = Math.floor((duration / (1000 * 60 * 60)) % 24);\n  \n    hours = (hours < 10) ? \"0\" + hours : hours;\n    minutes = (minutes < 10) ? \"0\" + minutes : minutes;\n    seconds = (seconds < 10) ? \"0\" + seconds : seconds;\n  \n    return hours + \":\" + minutes + \":\" + seconds + \".\" + milliseconds;\n  }\n\n  const calculateTimeEstimate = () => {\n    const wordLength = goalWord.length; \n    const numberOfNumbers = goalWord.replace(/[^0-9]/g,\"\").length; \n    const numberOfLetters = wordLength - numberOfNumbers; \n    const timeOneItaration = 2.6; //miliseconds\n\n    if (caseSensitive) {\n      setTimeEstimate((1/62)**wordLength * timeOneItaration); \n    } else {\n      setTimeEstimate((2/62)**numberOfLetters * (1/62)**numberOfNumbers * timeOneItaration); \n    }\n  }\n\n  const handleSubmit = () => {\n    calculateTimeEstimate(); \n    setPublicKey(`calculating... maximum time (rough estimate): ${msToTime(timeEstimate)}`);\n    setButtonDisabled(true);\n    var worker = new Worker(\"/createKey.js\");\n    worker.addEventListener('message', function(e) {\n      setPublicKey(e.data.publicKey);\n      setPrivateKey(e.data.privateKey);\n      setButtonDisabled(false);\n    }, false);\n    worker.postMessage({\"goalWord\": goalWord, \"caseSensitive\": caseSensitive}); \n  };\n\n  return (\n    <div className=\"airdrop-container\">\n      <h3>Generate a keypair for which the public key starts with letters of your choice 🎉</h3>\n      <div className=\"airdrop-wrapper\">\n        <p className=\"red\">All code runs in your browser; no-one, except for you has access to the generated keypair. Feel free to fork on Github and run locally.</p>\n        <h3>Goal word</h3>\n        <p>Enter the word your public key should start with (the longer the word, the longer the wait).</p>\n        <input\n          name=\"goalWord\"\n          type=\"text\"\n          value={goalWord}\n          onChange={handleChange}\n          className=\"airdrop-pk-input stake-input borrower-pk credix-button MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary balance-button\"\n        />\n        <label>\n          Case sensitive:\n          <input\n            name=\"caseSensitive\"\n            type=\"checkbox\"\n            checked={caseSensitive}\n            onChange={handleCaseSensitiveChange} />\n        </label>\n        <Button\n            variant=\"contained\"\n            className=\"stake-submit MuiButton-containedPrimary balance-button credix-button sol-airdrop\"\n            onClick={handleSubmit}\n            disabled={buttonDisabled}\n        >\n         GET KEY\n        </Button>\n        <h3>Public Key:</h3>\n        <p>{publicKey}</p>\n        <a\n            className=\"download-keypair\" \n            href={`data:text/json;charset=utf-8,${encodeURIComponent(\n              JSON.stringify(privateKey)\n            )}`}\n            download=\"id.json\"\n            disabled={buttonDisabled}\n          >\n            {`Download keypair`}\n          </a>\n       </div>\n    </div>\n  );\n};\n\nexport default KeyGenerator;\n"]},"metadata":{},"sourceType":"module"}